<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ExitButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAyCAYAAAAayliMAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAABMpJREFUaEPtmcuPFFUUh9kYkMCOmGj0T0GJgTAwI9MM8xKIiRqWKH+BiVFBIYAs
        jJKwAHYaUAMLwEQ3ji50ASGQkYfp6Rnsmenp13R4yCMp76+oU3PuqXOrblU3k5C4+BbTde89v+/cW909
        1StKpVLwPPO/gKR+8UIwvee9oLx5Y0xlbDiYPXwo6LRa6pxu6FqgefWqFdaXueNfq+vlpbCAFur++HDw
        ZPe4k8e7xoJaaSAxb+74N2oNH3ILTL//rlX8AQ9tAobsHNWh69H4O/191lpavSy8BRoTE1axOLAM+fZI
        OnxsJHNvbEe8bmV8VK3vwkugdf16XCA+JjwIhcM1H6RMJEI1gJZDI1Og9t238aL/oijvep7QGlxESvRt
        UvNIUgVqZ8/EC1pHxhXcHAUv5DySAKZOZ2R7XFfLxXEKtG/fssNTAS28FtIHuQ7bjYrZAdSujAyp+QhV
        oHXtmh5eFtRCFYGvySTaOwbDDFMDWxIZCVWAwltnnhcBWpBu4GuTBLsnmn/+kcgJEgLtv2+HE7CFcffl
        sdEC9AJeI9oFNJEkZFaQEKDBPuHvDQ1af+flq3UvJV+nOrQLRqIVHaX6Lz9bWYElcGffB0vhtaPDCiH8
        Ry+sCuGv+4LwmHvq1dfsa7yecpR4XmAJ0CC1+6wID0/cN13iY9KQc4E1hktEu/Bo51iYbf70yXSB+W39
        S913CIDMEA6o85xPX1yTHEt1M3YhFpg9dtSr+8TkG+sTQYA2lvAOD6SAaWqqAF30FSBkIKCNyxWeoPqR
        wOLw05xOgbltW5M3r7Yww2cnCoUHlEEcI/5uFAp0FhfDC/iHIxTw7D5HBgR4XQtf3vhmYr6KQ6C8dbMt
        sHD+XHghPD4FBYAMquHVecIlYLAEqgf2LwlgYEEB13EicoUnfARmPtzbEwGiZ+HBcgt0Sm+pAkAbn4mP
        QN7PABfaDSvR5qXiI9CY+HVJoOBNrHUex0a+BrT5KpQhSwDgRfX7v7awwHVscE27sU+8/EpiDRWHQGXX
        uC4wY95fYwHaBW1hhs+HVJGvHSEOgdbNG7oACI8RF0iRSOu8pJAE1Uce09ja4NOnepTZEqj/dMkWACkC
        Rb4e5JKg2qL7TgGAi1N9RkIeIyGRp/MSbwmqS830FQA+xygzQAofr1xtzd2/eq09hmqSgGno3dGhMFtr
        ctItUPv+bDjo7qhZJGMXAIoX/YSlnZhBw/g1Hh61kcPRfWAJABqo7gLgxbrkrw2vJ1/n4aOjQw+5Os2m
        lRUkBMBySsTw9Sm86T49kQBa1lSBBXOzqkcJaCG6ga/Nup8WHqgCgCaGu/AsJfh6gIWfio7O7NHDakbg
        FABeEkALloVcg4KLzi/8+IOajUgVoH81vSSAFlSizRPhqwNb4rpaLk6qAOAS84P9SRGXjA88ONZknZ/9
        8oiaR5IpQNDC8UNfkuAiPjI0TgTnP2pMv7NbzaDhLQCoAHiI4lKE4EIyMIF5UXh6nwfNK5fV2i5yCYB2
        pWKJ4KfSUISgYC6icXXzFs3XqX5xQK2XRW4BovrZJ1YAooVH7lwoAr9u/mNkE3PYM54iFBbg0FdxX6oH
        P1fXKUJPBCSLjUbQ+P038+XwTFC/dDFol8vquF7wTASWk+dcoBT8B4WkyRPAR5bdAAAAAElFTkSuQmCC
</value>
  </data>
</root>